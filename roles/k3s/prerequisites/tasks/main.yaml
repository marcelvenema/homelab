---
- name: Set SELinux to disabled state
  selinux:
    state: disabled
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Rocky']

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes
  when: ansible_all_ipv6_addresses

- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Rocky']

- name: Load br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Rocky']

- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Rocky']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'Red Hat Enterprise Linux', 'Rocky']

  # Install required packages
- name: Install required packages
  dnf:
    name: "{{ item }}"
    state: present
    update_cache: True
  with_items: " {{ k3s_required_packages }}"

  # Disable firewall
- name: Stop and disable firewalld.
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: false

  # Set hostname
- name: set hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"

  # Set timezone
- name: Configure timezone on all nodes
  community.general.timezone:
    name: "{{ k3s_timezone }}"

- name: Ensure chrony package is installed
  ansible.builtin.package:
    name: chrony
    state: present
- name: Enable and start chronyd service
  ansible.builtin.service:
    name: chronyd
    state: started
    enabled: yes
- name: Synchronize time manually
  ansible.builtin.shell:  chronyc sources
